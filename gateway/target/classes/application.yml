server:
  port: 7573

spring:
  application:
    name: cloud-gateway #以微服务注册进consul服务列表内
  cloud:
    consul: #配置consul地址
      host: localhost
      port: 8500
      discovery:
        prefer-ip-address: true
        service-name: ${spring.application.name}
    gateway:
      globalcors:
        cors-configurations:
          '[/**]':
            allowedOrigins: "*"
            allowedHeaders: "*"
            allowedMethods: "*"

      routes:
#        - id: pro_routh1 #pro_routh1查询                #路由的ID
#          uri: lb://operate-service
#          predicates:
#            - Path=/pro/gateway/get/**              # 断言，路径相匹配的进行路由
#
#
#        - id: pro_routh2 #pro_routh2测试                #路由的ID
#          uri: http://localhost:8001                #匹配后提供服务的路由地址
#          predicates:
#            - Path=/pro/gateway/info/**              # 断言，路径相匹配的进行路由
#
#        - id: pro_routh3 #pro_routh3修改               #路由的ID
#          uri: lb://operate-service
#          predicates:
#            - Path=/pro/gateway/update/**              # 断言，路径相匹配的进行路由
#
#        - id: pro_routh4 #pro_routh4删除                #路由的ID
#          uri: lb://operate-service
#          predicates:
#            - Path=/pro/gateway/del/**              # 断言，路径相匹配的进行路由
#
#        - id: pro_routh5 #pro_routh5添加                #路由的ID
#          uri: lb://operate-service
#          predicates:
#            - Path=/pro/gateway/add/**              # 断言，路径相匹配的进行路由
#
#        - id: pro_routh6 #pro_routh1查询                #路由的ID
#          uri: lb://operate-service
#          predicates:
#            - Path=/pro/gateway/**             # 断言，路径相匹配的进行路由

        - id: login_routh #pro_routh登录                #路由的ID
          uri: lb://login
          predicates:
            - Path=/api/login/gateway/**              # 断言，路径相匹配的进行路由


        - id: pro_route
          uri: lb://operate-service  # 8005的服务地址
          predicates:
            - Path=/api/pro/**
#          filters:
#            - name: TokenFilter  # 自定义的网关过滤器，用于JWT鉴权
#              args:
#                tokenHeader: token
